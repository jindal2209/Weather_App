{"version":3,"sources":["configure.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","App","useState","city","setCity","showWeather","setWeather","data","setData","WeatherData","className","class","main","temp","feels_like","name","sys","country","coord","lat","lon","weather","description","temp_min","temp_max","pressure","humidity","clouds","all","wind","speed","onClick","url","fetch","then","res","json","console","log","catch","error","type","value","onInput","e","target","placeholder","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5fffb58.chunk.js","sourcesContent":["var API_KEY = \"1c9e829440469e37534d620c72e6f0bb\"\r\n\r\nexport default API_KEY","import { useState } from 'react';\nimport './App.css';\nimport API_KEY from './configure';\n\n\nfunction App() {\n\tvar [city,setCity] = useState(\"\")\n\tvar [showWeather,setWeather] = useState(false)\n\t// var [country,setCountry] = useState(\"\")\n\tvar [data,setData] = useState({})\n\t\n\tfunction handleSearchLocation(){\n\t\tnavigator.geolocation.getCurrentPosition((position) => {\n\t\t\tvar lon = position.coords.longitude ;\n\t\t\tvar lat = position.coords.latitude ;\n\t\t\tvar url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`;\n\t\t\tfetch(url)\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then((data) => {\n\t\t\t\t\tsetData(data);\n\t\t\t\t\tsetWeather(true);\n\t\t\t\t\tconsole.log('hi');\n\t\t\t\t})\n\t\t\t\t.catch(error => console.log(error));\n\t\t});\n\t}\n\n\tfunction handleSearch(){\n\t\tvar url = `https://api.openweathermap.org/data/2.5/weather?q=${city},110034,IN&appid=${API_KEY}&units=metric`;\n\t\tfetch(url)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => {\n\t\t\t\tsetData(data);\n\t\t\t\tsetWeather(true);\n\t\t\t\tconsole.log('hi');\n\t\t\t})\n\t\t\t.catch(error => console.log(error));\n\t}\n\t\n\tfunction WeatherData () {\n\t\treturn (\n\t\t\t<div className=\"col-lg-8\">\n\t\t\t\t<div className=\"card shadow-lg mt-4\">\n\t\t\t\t\t<div class=\"card-body\">\n\n\t\t\t\t\t\t<div class='container'>\n\t\t\t\t\t\t\t<div className='row d-dlex justify-content-center'>\n\t\t\t\t\t\t\t\t<div className='col-lg-6 d-flex justify-content-center' >\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t<h1 className='display-1'><b>{data.main.temp} &#8451;</b> <i className=\"fas fa-sun\"></i></h1>\n\t\t\t\t\t\t\t\t\t\t{/* &#8457;  for fahrenheit */}\n\t\t\t\t\t\t\t\t\t\t<h4>\n\t\t\t\t\t\t\t\t\t\t\tRealfeel &reg;: {data.main.feels_like}\n\t\t\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t\t\t<h2>{data.name}, {data.sys.country}</h2>\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-lg-3 d-flex justify-content-center'>\n\t\t\t\t\t\t\t\t\tLatitude: {data.coord.lat}\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\tLongitude: {data.coord.lon}\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\tweather: {data.weather[0].main},{data.weather[0].description}\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\tMin: {data.main.temp_min} &#8451;\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\tMax: {data.main.temp_max} &#8451;\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class='col-lg-3 d-flex justify-content-center'>\n\t\t\t\t\t\t\t\t\t{/* <br /> */}\n\t\t\t\t\t\t\t\t\tPressure: {data.main.pressure} hPa\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\tHumidity: {data.main.humidity} %\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\tcloud: {data.clouds.all} %\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\twind_speed: {data.wind.speed} m/sec\n\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\treturn (\n\t\t<div className=\"container text-white font-weight-bold p-3\">\n\t\t\t<div className='row d-flex justify-content-center'>\n\t\t\t\t<div class=\"input-group\">\n\t\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={handleSearch}><i className=\"fa fa-search\"></i></button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<input \n\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\tvalue={city} \n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tonInput={(e) => setCity(e.target.value)} \n\t\t\t\t\t\tplaceholder='Enter city or country name'\n\t\t\t\t\t/>\n\t\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t\t<button className='btn btn-danger' onClick={handleSearchLocation}><i className='fa fa-map-marker'></i></button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<br />\n\t\t\t<div className=\"row d-flex justify-content-center\">\n\t\t\t\t{showWeather ? <WeatherData /> : null}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}