{"version":3,"sources":["configure.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","App","useState","city","setCity","showWeather","setWeather","icon","setIcon","data","setData","handleIcon","name","day","hours","Date","getHours","isDayTime","id","weather","WeatherData","className","sys","country","Math","round","main","temp","description","feels_like","coord","lat","lon","temp_min","temp_max","pressure","humidity","clouds","all","wind","speed","onClick","url","fetch","then","res","json","console","log","catch","error","type","value","onInput","e","target","placeholder","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.670ca3be.chunk.js","sourcesContent":["var API_KEY = \"1c9e829440469e37534d620c72e6f0bb\"\r\n\r\nexport default API_KEY","import { useState } from 'react';\nimport './App.css';\nimport API_KEY from './configure';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'bootstrap/dist/js/bootstrap.bundle'\nimport 'weather-icons/css/weather-icons.css'\n\nfunction App() {\n\tvar [city, setCity] = useState(\"\")\n\tvar [showWeather, setWeather] = useState(false)\n\tvar [icon, setIcon] = useState()\n\tvar [data, setData] = useState({})\n\n\tfunction handleIcon() {\n\t\tconst hours = new Date().getHours()\n\t\tconst isDayTime = hours > 5 && hours < 19\n\t\t\n\t\tvar name;\n\t\tvar id = data.weather[0].id\n\t\tvar day\n\t\tif(isDayTime){\n\t\t\tday = 'day';\n\t\t}\n\t\telse{\n\t\t\tday = 'night'\n\t\t}\n\n\t\tswitch(id){\n\t\t\tcase 200:\n\t\t\t\tname = `wi wi-${day}-storm-showers`\n\t\t\t\tbreak;\n\t\t\tcase 230:\n\t\t\t\tname = `wi wi-${day}-storm-showers`\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tname = `wi wi-owm-${day}-${id}`\n\t\t\t\tbreak;\n\t\t}\n\t\tsetIcon(name)\n\t}\n\n\tfunction handleSearchLocation() {\n\t\tnavigator.geolocation.getCurrentPosition((position) => {\n\t\t\tvar lon = position.coords.longitude;\n\t\t\tvar lat = position.coords.latitude;\n\t\t\tvar url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`;\n\t\t\tfetch(url)\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then((data) => {\n\t\t\t\t\tsetData(data);\n\t\t\t\t\thandleIcon();\n\t\t\t\t\tsetWeather(true);\n\t\t\t\t\tconsole.log('hi');\n\t\t\t\t})\n\t\t\t\t.catch(error => console.log(error));\n\t\t});\n\t}\n\n\tfunction handleSearch() {\n\t\tvar url = `https://api.openweathermap.org/data/2.5/weather?q=${city},110034,IN&appid=${API_KEY}&units=metric`;\n\t\tfetch(url)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => {\n\t\t\t\tsetData(data);\n\t\t\t\thandleIcon();\n\t\t\t\tsetWeather(true);\n\t\t\t\tconsole.log('hi');\n\t\t\t})\n\t\t\t.catch(error => console.log(error));\n\t}\n\n\tfunction WeatherData() {\n\t\treturn (\n\t\t\t<div className='outercard shadow-lg rounded container'>\n\t\t\t\t<div className='card-body'>\n\t\t\t\t\t<div className='row d-flex align-items-center'>\n\t\t\t\t\t\t<div className='col-lg-6'>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t<h2><b>{data.name}, {data.sys.country}</b></h2>\n\t\t\t\t\t\t\t\t<h1 className='display-1 fw-bold'>{Math.round(data.main.temp)} &#8451;</h1>\n\t\t\t\t\t\t\t\t{/* &#8457;  for fahrenheit */}\n\t\t\t\t\t\t\t\t<h6>\n\t\t\t\t\t\t\t\t\t{data.weather[0].main}, {data.weather[0].description}\t\n\t\t\t\t\t\t\t\t</h6>\n\t\t\t\t\t\t\t\t<h4>\n\t\t\t\t\t\t\t\t\tRealfeel&reg; {data.main.feels_like} &#8451;\n\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t<h1 className='display-1'><i className={icon}></i></h1>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='col-lg-6'>\n\t\t\t\t\t\t\t<div className='m-1 innercard p-3'>\n\t\t\t\t\t\t\t\t<p>Latitude: {data.coord.lat}</p>\n\t\t\t\t\t\t\t\t<p>Longitude: {data.coord.lon}</p>\n\t\t\t\t\t\t\t\t<p>Min: {data.main.temp_min} &#8451;</p>\n\t\t\t\t\t\t\t\t<p>Max: {data.main.temp_max} &#8451;</p>\n\t\t\t\t\t\t\t\t<p>Pressure: {data.main.pressure} hPa</p>\n\t\t\t\t\t\t\t\t<p>Humidity: {data.main.humidity} %</p>\n\t\t\t\t\t\t\t\t<p>Cloud: {data.clouds.all} %</p>\n\t\t\t\t\t\t\t\t<p>Wind Speed: {data.wind.speed} m/sec</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\treturn (\n\t\t<div className=\"container text-white font-weight-bold p-3\">\n\t\t\t<div className='row d-flex justify-content-center'>\n\t\t\t\t<div className=\"input-group\">\n\t\t\t\t\t<div className=\"input-group-prepend\">\n\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={handleSearch}><i className=\"fa fa-search\"></i></button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={city}\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tonInput={(e) => setCity(e.target.value)}\n\t\t\t\t\t\tplaceholder='Enter city name or country name'\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"input-group-prepend\">\n\t\t\t\t\t\t<button className='btn btn-danger' onClick={handleSearchLocation}><i className='fa fa-map-marker'></i></button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<br />\n\t\t\t<div className=\"row d-flex justify-content-center mt-5\">\n\t\t\t\t<div className='col-lg-6'>\n\t\t\t\t\t{showWeather ? <WeatherData /> : null}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}