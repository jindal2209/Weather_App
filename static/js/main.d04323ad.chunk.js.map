{"version":3,"sources":["configure.js","Weather.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","WeatherData","data","useState","icon","setIcon","useEffect","name","hours","Date","getHours","isDayTime","id","weather","day","className","sys","country","main","temp","description","feels_like","coord","lat","lon","temp_min","temp_max","pressure","humidity","clouds","all","wind","speed","App","city","setCity","showWeather","setWeather","setData","onClick","event","preventDefault","url","axios","get","then","response","catch","error","console","log","type","value","onInput","e","target","placeholder","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","Weather","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d04323ad.chunk.js","sourcesContent":["var API_KEY = \"1c9e829440469e37534d620c72e6f0bb\"\r\n\r\nexport default API_KEY;","import { useEffect, useState } from \"react\";\r\n\r\nfunction WeatherData({data}) {\r\n\tvar [icon,setIcon] = useState('');\r\n\tuseEffect(() => {\r\n\t\tconst hours = new Date().getHours();\r\n\t\tconst isDayTime = hours > 5 && hours < 19 ;\r\n\t\tvar name;\r\n\t\tvar id = data.weather[0].id ;\r\n\t\tvar day = isDayTime ? 'day' : 'night';\r\n\t\r\n\t\tswitch(id){\r\n\t\t\tcase 200:\r\n\t\t\t\tname = `wi wi-${day}-storm-showers`;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 230:\r\n\t\t\t\tname = `wi wi-${day}-storm-showers`;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tname = `wi wi-owm-${day}-${id}`;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tsetIcon(name);\r\n\t\t// console.log('hi');\r\n\t},[data.weather])\r\n\treturn (\r\n\t\t<div className='outercard shadow-lg rounded container'>\r\n\t\t\t<div className='card-body'>\r\n\t\t\t\t<div className='row d-flex align-items-center'>\r\n\t\t\t\t\t<div className='col-lg-6'>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h2 className='text-decoration-underline'><b>{data.name}, {data.sys.country}</b></h2>\r\n\t\t\t\t\t\t\t<h1 className='display-1 fw-bold'>{data.main.temp} &#8451;</h1>\r\n\t\t\t\t\t\t\t{/* &#8457;  for fahrenheit */}\r\n\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t{data.weather[0].main}, {data.weather[0].description}\t\r\n\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\tRealfeel&reg; {data.main.feels_like} &#8451;\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t<h1 className='display-1'><i className={icon}></i></h1>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='col-lg-6'>\r\n\t\t\t\t\t\t<div className='m-1 innercard p-3'>\r\n\t\t\t\t\t\t\t<p>Latitude: {data.coord.lat}</p>\r\n\t\t\t\t\t\t\t<p>Longitude: {data.coord.lon}</p>\r\n\t\t\t\t\t\t\t<p>Min: {data.main.temp_min} &#8451;</p>\r\n\t\t\t\t\t\t\t<p>Max: {data.main.temp_max} &#8451;</p>\r\n\t\t\t\t\t\t\t<p>Pressure: {data.main.pressure} hPa</p>\r\n\t\t\t\t\t\t\t<p>Humidity: {data.main.humidity} %</p>\r\n\t\t\t\t\t\t\t<p>Cloud: {data.clouds.all} %</p>\r\n\t\t\t\t\t\t\t<p>Wind Speed: {data.wind.speed} m/sec</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default WeatherData;","import { useState } from 'react';\r\nimport './App.css';\r\nimport API_KEY from './configure';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'bootstrap/dist/js/bootstrap.bundle'\r\nimport 'weather-icons/css/weather-icons.css'\r\nimport WeatherData from './Weather'\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n\tvar [city, setCity] = useState(\"\")\r\n\tvar [showWeather, setWeather] = useState(false)\r\n\tvar [data, setData] = useState({})\r\n\r\n\tfunction handleSearchLocation(event) {\r\n\t\tevent.preventDefault();\r\n\t\tnavigator.geolocation.getCurrentPosition((position) => {\r\n\t\t\tvar lon = position.coords.longitude;\r\n\t\t\tvar lat = position.coords.latitude;\r\n\t\t\tvar url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`;\r\n\t\t\t\r\n\t\t\taxios.get(url)\r\n\t\t\t\t.then(response => {\r\n\t\t\t\t\tsetData({'data':response.data})\r\n\t\t\t\t\tsetWeather(true)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t})\r\n\t\t});\r\n\t}\r\n\r\n\tfunction handleSearch(event) {\r\n\t\tevent.preventDefault();\r\n\t\tvar url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`;\r\n\t\taxios.get(url)\r\n\t\t\t.then(response => {\r\n\t\t\t\tsetData({'data':response.data})\r\n\t\t\t\tsetWeather(true)\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"container text-white font-weight-bold p-3\">\r\n\t\t\t<form>\r\n\t\t\t<div className='row d-flex justify-content-center'>\r\n\t\t\t\t<div className=\"input-group\">\r\n\t\t\t\t\t<div className=\"input-group-prepend\">\r\n\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={handleSearch} ><i className=\"fa fa-search\"></i></button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tvalue={city}\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tonInput={(e) => setCity(e.target.value)}\r\n\t\t\t\t\t\tplaceholder='Enter city name or country name'\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className=\"input-group-prepend\">\r\n\t\t\t\t\t\t<button className='btn btn-danger' onClick={handleSearchLocation}><i className='fa fa-map-marker'></i></button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t\t<br />\r\n\t\t\t<div className=\"row d-flex justify-content-center mt-5\">\r\n\t\t\t\t<div className='col-lg-7'>\r\n\t\t\t\t\t{showWeather ? <WeatherData data={data.data} /> : null}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}